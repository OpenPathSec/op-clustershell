.\" Man page generated from reStructeredText.
.TH clubak 1 "2010-02-22" "1.2" "ClusterShell User Manual"
.SH NAME
clubak \- format output from clush/pdsh-like output

.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level magin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..

.SH SYNOPSIS
\fBclubak\fP [ OPTIONS ]


.SH DESCRIPTION
\fBclubak\fP formats text from standard input containing lines of the form
"\fInode:output\fP".  It is fully backward compatible with \fBdshbak\fP(1) but
provides additonal features. For instance, \fBclubak\fP always displays
its results sorted by node/nodeset.

You do not need to use \fBclubak\fP when using \fBclush\fP(1) as all output
formatting features are already included in.

Like \fBclush\fP(1), \fBclubak\fP uses the \fIClusterShell.MsgTree\fP module of the
ClusterShell library (see \fBpydoc ClusterShell.MsgTree\fP).


.SH INVOCATION
\fBclubak\fP should be started with connected standard input.


.SH OPTIONS
.INDENT 0.0

.TP
.B \-\-version
show \fBclubak\fP version number and exit


.TP
.B \-b , \-c
gather nodes with same output (\-c is provided for \fBdshbak\fP(1)
compatibility)


.TP
.B \-d , \-\-debug
output more messages for debugging purpose


.TP
.B \-L
disable header block and order output by nodes

.UNINDENT

.SH EXIT STATUS
An exit status of zero indicates success of the \fBclubak\fP command.


.SH EXAMPLES
.INDENT 0.0

.IP 1. 3
\fBclubak\fP can be used to gather some recorded \fBclush\fP(1) results:

.UNINDENT
.INDENT 0.0

.TP
.B Record \fBclush\fP(1) results in a file:

# clush \-w node[1\-7] uname \-r >/tmp/clush_output
.br
# clush \-w node[32\-159] uname \-r >>/tmp/clush_output
.br


.TP
.B Display file gathered results (in line\-mode):

# clubak \-bL </tmp/clush_output
.br

.UNINDENT
.INDENT 0.0

.IP 2. 3
Another example, iterate over \fInode*\fP text files in current directory and gather characters count for all of them:

.INDENT 3.0
.INDENT 3.5

# find \-name "node*" \-exec wc \-c {} ; | awk \'{ gsub("./","",$2); print $2": "$1 }\' | clubak \-bL
.br
node[1,3]: 7
.br
node2: 9
.br

.UNINDENT
.UNINDENT
.UNINDENT

.SH SEE ALSO
\fBclush\fP(1)
\fBnodeset\fP(1)


.SH BUG REPORTS
.INDENT 0.0

.TP
.B Use the following URL to submit a bug report or feedback:
\fI\%http://sourceforge.net/apps/trac/clustershell/report\fP

.UNINDENT

.SH AUTHOR
Stephane Thiell, CEA DAM  <stephane.thiell@cea.fr>

.SH COPYRIGHT
CeCILL-C V1

.\" Generated by docutils manpage writer on 2010-02-22 22:45.
.\" 
